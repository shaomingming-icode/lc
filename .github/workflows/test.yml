name: test case and clang-tidy check

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  testcase_clangtidy_check:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was triggered by a ${{ github.event_name }} event, branch is ${{ github.ref_name }}"

      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: test case check prepare
        run: |
          mkdir build
        shell: bash

      - name: test case check run
        run: |
          cd build

      - name: clang-tidy check prepare
        run: |
          python -m pip install --upgrade setuptools
          python -m pip install clang-tidy
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git diff origin/master --name-only > git_diff.txt

      - name: clang-tidy check run
        shell: python
        run: |
          import os
          import subprocess
          import sys

          print("Python {}.{}.{}".format(*sys.version_info))
          with open("git_diff.txt") as in_file:
            modified_files = sorted(in_file.read().splitlines())
          print("{} files were modified.".format(len(modified_files)))

          cpp_exts = tuple(".c .c++ .cc .cpp .cu .cuh .cxx .h .h++ .hh .hpp .hxx .tpp".split())
          cpp_files = [file for file in modified_files if file.lower().endswith(cpp_exts)]
          print(f"{len(cpp_files)} C++ files were modified.")
          if not cpp_files:
            sys.exit(0)

          result = subprocess.run(["clang-tidy", "-p", "build", "--warnings-as-errors=*"] + cpp_files, capture_output=True, text=True)
          print("clang tidy errors:")
          print(result.stdout)
          print(result.stderr)
          sys.exit(result.returncode)

